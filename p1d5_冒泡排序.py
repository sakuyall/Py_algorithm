# p1-冒泡排序-9/25/25---------------------------------------------
"""
自第一个元素起,自左而右比较相邻元素的值,将大值交换到右边,重复这一过程
直到处理完最后两个元素的数据,称为一轮加工，此时最大值已在最后位置
接着对余下n-1个数据继续比较与交换
时间复杂度O(n)
"""
def BubbleSort(list):
    n = len(list)
    for i in range(n - 1, -1, -1):   # 反向循环n-1指向0位置(注意左闭右开)，右往左逐渐减少的边界
        # 这一步是限制了下面j取值的右边界
        # 这一部分也就这个反向循环比较特殊，下边都常规
        for j in range(i):           # 初始i表示最后一位
            if list[j] > list[j + 1]:
                # 若前者大于后者，则交换
                list[j], list[j + 1] = list[j + 1], list[j]
            # 不满足判断条件则j继续通过for循环,将此次阻挡的下一个大数往右推
        print(list)                  # 每轮冒泡完毕的可视化

a = [8, 5, 6, 4, 3, 7, 10, 2]
BubbleSort(a)
# 考虑先设边界再进行遍历，右边界缩减就要这样做
# fin